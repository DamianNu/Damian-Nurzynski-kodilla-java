-- *************************** TASK 30.4 ***************************
-- create table BOOKS_AUD
CREATE TABLE BOOKS_AUD
(
    EVENT_ID       INT(11)  NOT NULL AUTO_INCREMENT,
    EVENT_DATE     DATETIME NOT NULL,
    EVENT_TYPE     VARCHAR(10) DEFAULT NULL,
    BOOKS_ID       INT(11)  NOT NULL,
    OLD_TITLE      VARCHAR(255),
    NEW_TITLE      VARCHAR(255),
    OLD_PUBYEAR    INT,
    NEW_PUBYEAR    INT,
    OLD_BESTSELLER INT(1),
    NEW_BESTSELLER INT(1),
    PRIMARY KEY (EVENT_ID)
);
-- create table READERS_AUD
CREATE TABLE READERS_AUD
(
    EVENT_ID      INT(11)  NOT NULL AUTO_INCREMENT,
    EVENT_DATE    DATETIME NOT NULL,
    EVENT_TYPE    VARCHAR(10) DEFAULT NULL,
    READERS_ID    INT(11)  NOT NULL,
    OLD_FIRSTNAME VARCHAR(255),
    NEW_FIRSTNAME VARCHAR(255),
    OLD_LASTNAME  VARCHAR(255),
    NEW_LASTNAME  VARCHAR(255),
    OLD_PESELID   VARCHAR(11),
    NEW_PESELID   VARCHAR(11),
    OLD_VIP_LEVEL VARCHAR(255),
    NEW_VIP_LEVEL VARCHAR(255),
    PRIMARY KEY (EVENT_ID)
);

--      trigger INSERT (BOOK_AUD)

DELIMITER $$

CREATE TRIGGER BOOK_INSERT
    AFTER INSERT
    ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOKS_ID, NEW_TITLE, NEW_PUBYEAR)
        VALUE (CURTIME(), "INSERT", NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR);
END $$

DELIMITER ;

--      trigger DELETE (BOOK_AUD)

DELIMITER $$

CREATE TRIGGER BOOK_DELETE
    AFTER DELETE
    ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOKS_ID, OLD_TITLE, OLD_PUBYEAR)
        VALUE (CURTIME(), "DELETE", OLD.BOOK_ID, OLD.TITLE, OLD.PUBYEAR);
END $$

DELIMITER ;

--      trigger UPDATE (BOOK_AUD)

DELIMITER $$

CREATE TRIGGER BOOK_UPDATE
    AFTER UPDATE
    ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOKS_ID, NEW_TITLE, NEW_PUBYEAR,
                           NEW_BESTSELLER, OLD_TITLE, OLD_PUBYEAR, OLD_BESTSELLER)
        VALUE (CURTIME(), "UPDATE", OLD.BOOK_ID, NEW.TITLE, NEW.PUBYEAR,
               NEW.BESTSELLER, OLD.TITLE, OLD.PUBYEAR, OLD.BESTSELLER);
END $$

DELIMITER ;

--      trigger INSERT (READERS_AUD)

DELIMITER $$

CREATE TRIGGER READERS_INSERT
    AFTER INSERT
    ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READERS_ID, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID)
        VALUE (CURTIME(), "INSERT", NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID);
END $$

DELIMITER ;

--      trigger DELETE (READERS_AUD)

DELIMITER $$

CREATE TRIGGER READERS_DELETE
    AFTER DELETE
    ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READERS_ID, OLD_FIRSTNAME, OLD_LASTNAME, OLD_PESELID)
        VALUE (CURTIME(), "DELETE", OLD.READER_ID, OLD.FIRSTNAME, OLD.LASTNAME, OLD.PESELID);
END $$

DELIMITER ;

--      trigger UPDATE (READERS_AUD)

DELIMITER $$

CREATE TRIGGER READERS_UPDATE
    AFTER UPDATE
    ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READERS_ID, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID,
                             NEW_VIP_LEVEL, OLD_FIRSTNAME, OLD_LASTNAME, OLD_PESELID, OLD_VIP_LEVEL)
        VALUE (CURTIME(), "UPDATE", OLD.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME,NEW.PESELID, NEW.VIP_LEVEL,
               OLD.FIRSTNAME, OLD.LASTNAME, OLD.PESELID, OLD.VIP_LEVEL);
END $$

DELIMITER ;

-- *************************** ********* ***************************

